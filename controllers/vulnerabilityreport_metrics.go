package controllers

import (
	"github.com/prometheus/client_golang/prometheus"
	"sigs.k8s.io/controller-runtime/pkg/metrics"
)

const (
	metricNamespace = "starboard_exporter"
	metricSubsystem = "vulnerabilityreport"
)

// Gauge for each CVE present in an image.
var (
	vulnInfoLabels = []string{
		// Include report name?
		"image_namespace",
		"image_repository",
		"image_tag",
		"image_digest",
		"vulnerability_id",
		"vulnerability_score",
		"severity",
	}

	VulnerabilityInfo = prometheus.NewGaugeVec(
		prometheus.GaugeOpts{
			Namespace: metricNamespace,
			Subsystem: metricSubsystem,
			Name:      "image_vulnerabilities",
			Help:      "Indicates the presence of a CVE in an image.",
		},
		vulnInfoLabels,
	)
)

// Gauge for the count of all vulnerabilities of a particular severity contained in an image.
var (
	vulnSummaryLabels = []string{
		// Include report name?
		"image_namespace",
		"image_repository",
		"image_tag",
		"image_digest",
		"severity",
	}

	VulnerabilitySummary = prometheus.NewGaugeVec(
		prometheus.GaugeOpts{
			Namespace: metricNamespace,
			Subsystem: metricSubsystem,
			Name:      "image_vulnerabilities_count",
			Help:      "Exposes the number of vulnerabilities of a particular severity per-image.",
		},
		vulnSummaryLabels,
	)
)

func init() {
	// Register custom metrics with the global prometheus registry
	metrics.Registry.MustRegister(VulnerabilityInfo, VulnerabilitySummary)
}
