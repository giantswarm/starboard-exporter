apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "resource.default.name"  . }}
  namespace: {{ include "resource.default.namespace"  . }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "labels.selector" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
      labels:
        {{- include "labels.common" . | nindent 8 }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  {{- include "labels.selector" . | nindent 18 }}
              topologyKey: kubernetes.io/hostname
            weight: 100
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
      serviceAccountName: {{ include "resource.default.name"  . }}
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        runAsUser: {{ .Values.pod.user.id }}
        runAsGroup: {{ .Values.pod.group.id }}
        runAsNonRoot: true
      containers:
      - name: {{ include "name" . }}
        image: "{{ .Values.registry.domain }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        args:
          - --pod-ip=$(MY_POD_IP)
          - --service-name={{ include "resource.default.name"  . }}
          - --service-namespace={{ include "resource.default.namespace"  . }}
        {{- if .Values.exporter.vulnerabilityReports.targetLabels }}
          - --target-labels={{ .Values.exporter.vulnerabilityReports.targetLabels | join "," }}
        {{- end }}
        {{- if .Values.exporter.requeueMaxJitterPercent }}
          - --max-jitter-percent={{ .Values.exporter.requeueMaxJitterPercent }}
        {{- end }}
        env:
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 30
          timeoutSeconds: 1
        resources:
{{ toYaml .Values.resources | indent 10 }}
        {{- with .Values.securityContext }}
        securityContext:
          {{- . | toYaml | nindent 10 }}
        {{- end }}
